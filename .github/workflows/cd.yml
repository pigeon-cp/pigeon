# 说明：仅在监测到 'v*' 开头的 tags 推送时触发
# 将自动将该 tags 对应的代码构建成 docker 镜像并推送至 docker hub，期间会以代码 tags 去掉前缀的 v 后作为
# 镜像的 tag 区分，如代码 tag v0.1.0，则生成的镜像 tag 为 repo/pigeon:0.1.0
# 此外还会同步更新 latest 镜像为当前 tag

name: CD Workflow
on:
  push:
    tags:
      - v*

jobs:
  publish-gh-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v2.5.0
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: maven

      - name: Build Jar Package
        run: mvn clean package -DskipTests

      - name: Compress & Package
        run: tar -czvf pigeon.tar.gz ./target/pigeon.jar

      - name: Create Release
        id: create_release
        uses: actions/create-release@latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Pigeon ${{ github.ref }} Release
          body_path: "./RELEASE.md"
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./pigeon.tar.gz
          asset_name: pigeon.tar.gz
          asset_content_type: application/zip

  publish-dockerhub:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Extract Version
        id: get_version
        run: |
          echo "::set-output name=VERSION::$(echo $GITHUB_REF | sed 's/refs\/tags\/v//')"
      - run: echo ${{ steps.get_version.outputs.VERSION }}

      - uses: actions/setup-java@v2.5.0
        with:
          distribution: 'temurin'
          java-version: '8'
          cache: maven

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v1

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Test Docker
        run: docker --version

      - name: Build Jar Package
        run: mvn clean package -DskipTests

      - run: ls -la ./target

      - name: Docker Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/pigeon:${{ steps.get_version.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/pigeon:latest
